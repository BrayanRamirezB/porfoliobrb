---
import ExperienceItem from './ExperienceItem.astro'

const EXPERIENCE = [
  {
    date: 'Enero 2025 - Actualidad',
    title: 'MictlanUI',
    company: 'Proyecto personal de código abierto',
    description:
      'Desarrollé un Design System completo para estandarizar el diseño de interfaces en proyectos digitales. Utilizando herramientas como Astro, TailwindCSS, TypeScript y React. En donde diseñé y documenté componentes reutilizables como botones, formularios,modales, etc. Además, elaboré una guía de estilo detallada que incluye principios básicos, variantes, paleta de colores y ejemplos de uso.',
    link: 'https://mictlanuidev.netlify.app/'
  },
  {
    date: 'Febrero - Marzo 2025',
    title: 'F1 Concept Landing Page',
    company: 'Proyecto personal de código abierto',
    description:
      'Desarrollé un sition web que contiene información sobre los resultados de la temporada de F1 2025. Diseñada con tecnologías como Astro 5, Tailwind 4 y TypeScript, este sitio web es una alternativa al sitio web oficial de la F1 y ofrece una experiencia rápida y responsiva.',
    link: 'https://f1-concept-landing-page.netlify.app/'
  },
  {
    date: 'Febrero 2025',
    title: 'DragonBall Wiki',
    company: 'Proyecto personal de código abierto',
    description:
      'Desarrollé un sitio web para mostrar información detallada de personajes icónicos de las sagas de Dragon Ball Z, Dragon Ball GT, Dragon Ball Super y más. Diseñado y desarrollado desde cero con tecnologías como Astro 5, Tailwind 4 y TypeScript, este wiki ofrece una experiencia rápida, responsiva y llena de detalles para los fans de Dragon Ball.',
    link: 'https://dragonball-wiki-dev.netlify.app/'
  },

  {
    date: 'Agosto 2023 - Diciembre 2024',
    title:
      'Sistema de Detección de Movimiento usando Visión Artificial (Trabajo Terminal)',
    company: 'Escuela Superior de Cómputo (ESCOM)',
    description:
      'Lideré un equipo de dos personas para diseñar un prototipo de sistema de detección de movimiento basado en Visión Artificial utilizando cámaras de seguridad según el patrón Modelo-Vista-Controlador (MVC), integrando módulos de alertas en tiempo real utilizando tecnologías como YOLOV8, OpenCV y PyQt6',
    link: 'https://github.com/BrayanRamirezB/TrabajoTerminal2024-B016'
  }
]
---

<ol class='relative border-s border-[#f83600]/40 dark:border-[#0052D4]/40'>
  {
    EXPERIENCE.map((item) => (
      <li>
        <ExperienceItem {...item} />
      </li>
    ))
  }
</ol>
